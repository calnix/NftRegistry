import { ethers } from 'ethers';
import { ExplorerName } from '@sphinx-labs/contracts';
import { Logger } from '@eth-optimism/common-ts';
import { ChainConfig } from '@nomicfoundation/hardhat-verify/types';
import { DeploymentConfig } from './config/types';
import { SphinxJsonRpcProvider } from './provider';
import { SolcInput } from './languages';
export declare const verifySphinxConfig: (deploymentConfig: DeploymentConfig, provider: ethers.Provider, apiKey: string, explorer?: ExplorerName) => Promise<void>;
export declare const verifyDeploymentWithRetries: (deploymentConfig: DeploymentConfig, provider: ethers.Provider, apiKey: string) => Promise<void>;
export declare const attemptVerification: (address: string, encodedConstructorArgs: string, fullyQualifiedName: string, solcLongVersion: string, minimumCompilerInput: SolcInput, provider: ethers.Provider, chainId: string, etherscanApiKey: string, explorer?: ExplorerName) => Promise<{
    success: boolean;
    message?: string;
}>;
export declare const verifySphinxSystem: (provider: SphinxJsonRpcProvider, logger: Logger) => Promise<void>;
export declare const builtinChains: Array<ChainConfig>;
