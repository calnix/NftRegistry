import { DeploymentConfig, ConfigArtifacts, GetConfigArtifacts, NetworkConfig, ProposalRequest, RelayProposal, SphinxJsonRpcProvider, SphinxTransactionReceipt, StoreDeploymentConfig, getPreview } from '@sphinx-labs/core';
import { HardhatEthersProvider } from '@nomicfoundation/hardhat-ethers/internal/hardhat-ethers-provider';
import { SphinxMerkleTree } from '@sphinx-labs/contracts';
import { ProposeArgs } from './propose';
import { DeployArgs } from './deploy';
import { BuildNetworkConfigArray, FetchRemoteArtifacts, GetNetworkGasEstimate } from './types';
export type SphinxContext = {
    makeGetConfigArtifacts: (artifactFolder: string, buildInfoFolder: string, projectRoot: string, cachePath: string) => GetConfigArtifacts;
    prompt: (question: string) => Promise<void>;
    isLiveNetwork: (provider: SphinxJsonRpcProvider | HardhatEthersProvider) => Promise<boolean>;
    propose: (args: ProposeArgs) => Promise<{
        proposalRequest?: ProposalRequest;
        deploymentConfigData?: string;
        configArtifacts?: ConfigArtifacts;
        networkConfigArray?: Array<NetworkConfig>;
        merkleTree?: SphinxMerkleTree;
    }>;
    deploy: (args: DeployArgs) => Promise<{
        deploymentConfig?: DeploymentConfig;
        merkleTree?: SphinxMerkleTree;
        preview?: ReturnType<typeof getPreview>;
        receipts?: Array<SphinxTransactionReceipt>;
        configArtifacts?: ConfigArtifacts;
    }>;
    getNetworkGasEstimate: GetNetworkGasEstimate;
    buildNetworkConfigArray: BuildNetworkConfigArray;
    storeDeploymentConfig: StoreDeploymentConfig;
    relayProposal: RelayProposal;
    fetchRemoteArtifacts: FetchRemoteArtifacts;
};
export declare const makeSphinxContext: () => SphinxContext;
