"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuildInfoTemplate = exports.trimObjectToType = void 0;
const trimObjectToType = (obj, typeTemplate) => {
    if (Array.isArray(typeTemplate)) {
        return obj;
    }
    else if (typeof typeTemplate !== 'object') {
        return obj;
    }
    else if (!typeTemplate === null || !typeTemplate === undefined) {
        throw new Error('Cannot specify a typeTemplate that is null or undefined');
    }
    const result = {};
    for (const key in typeTemplate) {
        if (key === 'sphinx_all_keys') {
            for (const genericKey in obj) {
                result[genericKey] = (0, exports.trimObjectToType)(obj[genericKey], typeTemplate[key]);
            }
        }
        else if (key in obj) {
            result[key] = (0, exports.trimObjectToType)(obj[key], typeTemplate[key]);
        }
    }
    return result;
};
exports.trimObjectToType = trimObjectToType;
exports.BuildInfoTemplate = {
    id: '',
    solcVersion: '',
    solcLongVersion: '',
    input: {
        language: '',
        sources: {
            sphinx_all_keys: {
                content: '',
            },
        },
        settings: {
            viaIR: false,
            optimizer: {
                runs: 0,
                enabled: false,
                details: {
                    yulDetails: {
                        optimizerSteps: '',
                    },
                },
            },
            metadata: {
                useLiteralContent: false,
                bytecodeHash: '',
                appendCBOR: true,
            },
            outputSelection: {
                sphinx_all_keys: {
                    sphinx_all_keys: [''],
                },
            },
            evmVersion: '',
            libraries: {
                sphinx_all_keys: {
                    sphinx_all_keys: '',
                },
            },
            remappings: [''],
        },
    },
    output: {
        contracts: {
            sphinx_all_keys: {
                sphinx_all_keys: {
                    abi: [''],
                    evm: {
                        bytecode: {
                            object: '',
                            linkReferences: {
                                sphinx_all_keys: {
                                    sphinx_all_keys: [
                                        {
                                            start: 0,
                                            length: 20,
                                        },
                                    ],
                                },
                            },
                            immutableReferences: {
                                sphinx_all_keys: [{ start: 0, length: 20 }],
                            },
                        },
                        deployedBytecode: {
                            object: '',
                            linkReferences: {
                                sphinx_all_keys: {
                                    sphinx_all_keys: [
                                        {
                                            start: 0,
                                            length: 20,
                                        },
                                    ],
                                },
                            },
                            immutableReferences: {
                                sphinx_all_keys: [{ start: 0, length: 20 }],
                            },
                        },
                    },
                    metadata: '',
                },
            },
        },
    },
};
//# sourceMappingURL=trim.js.map