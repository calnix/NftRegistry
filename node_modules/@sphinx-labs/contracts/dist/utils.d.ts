import { ethers } from 'ethers';
import { DecodedApproveLeafData, DecodedExecuteLeafData, ContractArtifact, LinkReferences } from './types';
import { SphinxLeaf } from './merkle-tree';
export declare const decodeApproveLeafData: (leaf: SphinxLeaf) => DecodedApproveLeafData;
export declare const decodeExecuteLeafData: (leaf: SphinxLeaf) => DecodedExecuteLeafData;
export declare const parseFoundryContractArtifact: (foundryArtifact: any) => ContractArtifact;
export declare const isContractArtifact: (obj: any) => obj is ContractArtifact;
export declare const remove0x: (str: string) => string;
export declare const add0x: (str: string) => string;
export declare const recursivelyConvertResult: (types: readonly ethers.ParamType[], values: ethers.Result) => unknown;
export declare const isLinkReferences: (obj: any) => obj is LinkReferences;
export declare const isNonNullObject: (obj: any) => boolean;
export declare const getCurrentGitCommitHash: () => string | null;
