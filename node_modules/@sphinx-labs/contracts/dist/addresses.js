"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCheckBalanceLowAddress = exports.getDrippieAddress = exports.getGnosisSafeSingletonAddress = exports.getGnosisSafeL2Address = exports.getSignMessageLibAddress = exports.getMultiSendCallOnlyAddress = exports.getMultiSendAddress = exports.getCreateCallAddress = exports.getCompatibilityFallbackHandlerAddress = exports.getDefaultCallbackHandlerAddress = exports.getGnosisSafeProxyFactoryAddress = exports.getSimulateTxAccessorAddress = exports.getSphinxModuleProxyFactoryAddress = exports.getSphinxModuleImplAddress = exports.getManagedServiceAddress = exports.getManagedServiceConstructorArgs = void 0;
const ethers_1 = require("ethers");
const ifaces_1 = require("./ifaces");
const constants_1 = require("./constants");
const getManagedServiceConstructorArgs = () => {
    return [(0, constants_1.getOwnerAddress)()];
};
exports.getManagedServiceConstructorArgs = getManagedServiceConstructorArgs;
const getManagedServiceAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes', 'bytes'], [
        ifaces_1.ManagedServiceArtifact.bytecode,
        ethers_1.AbiCoder.defaultAbiCoder().encode(['address'], (0, exports.getManagedServiceConstructorArgs)()),
    ]));
};
exports.getManagedServiceAddress = getManagedServiceAddress;
const getSphinxModuleImplAddress = () => {
    return (0, ethers_1.getCreate2Address)((0, exports.getSphinxModuleProxyFactoryAddress)(), ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.SphinxModuleArtifact.bytecode]));
};
exports.getSphinxModuleImplAddress = getSphinxModuleImplAddress;
const getSphinxModuleProxyFactoryAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.SphinxModuleProxyFactoryArtifact.bytecode]));
};
exports.getSphinxModuleProxyFactoryAddress = getSphinxModuleProxyFactoryAddress;
const getSimulateTxAccessorAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.SimulateTxAccessorArtifact.bytecode]));
};
exports.getSimulateTxAccessorAddress = getSimulateTxAccessorAddress;
const getGnosisSafeProxyFactoryAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.GnosisSafeProxyFactoryArtifact.bytecode]));
};
exports.getGnosisSafeProxyFactoryAddress = getGnosisSafeProxyFactoryAddress;
const getDefaultCallbackHandlerAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.DefaultCallbackHandlerArtifact.bytecode]));
};
exports.getDefaultCallbackHandlerAddress = getDefaultCallbackHandlerAddress;
const getCompatibilityFallbackHandlerAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.CompatibilityFallbackHandlerArtifact.bytecode]));
};
exports.getCompatibilityFallbackHandlerAddress = getCompatibilityFallbackHandlerAddress;
const getCreateCallAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.CreateCallArtifact.bytecode]));
};
exports.getCreateCallAddress = getCreateCallAddress;
const getMultiSendAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.MultiSendArtifact.bytecode]));
};
exports.getMultiSendAddress = getMultiSendAddress;
const getMultiSendCallOnlyAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.MultiSendCallOnlyArtifact.bytecode]));
};
exports.getMultiSendCallOnlyAddress = getMultiSendCallOnlyAddress;
const getSignMessageLibAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.SignMessageLibArtifact.bytecode]));
};
exports.getSignMessageLibAddress = getSignMessageLibAddress;
const getGnosisSafeL2Address = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.GnosisSafeL2Artifact.bytecode]));
};
exports.getGnosisSafeL2Address = getGnosisSafeL2Address;
const getGnosisSafeSingletonAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.GnosisSafeArtifact.bytecode]));
};
exports.getGnosisSafeSingletonAddress = getGnosisSafeSingletonAddress;
const getDrippieAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes', 'bytes'], [
        ifaces_1.DrippieArtifact.bytecode,
        ethers_1.AbiCoder.defaultAbiCoder().encode(['address'], [(0, constants_1.getOwnerAddress)()]),
    ]));
};
exports.getDrippieAddress = getDrippieAddress;
const getCheckBalanceLowAddress = () => {
    return (0, ethers_1.getCreate2Address)(constants_1.DETERMINISTIC_DEPLOYMENT_PROXY_ADDRESS, ethers_1.ZeroHash, (0, ethers_1.solidityPackedKeccak256)(['bytes'], [ifaces_1.CheckBalanceLowArtifact.bytecode]));
};
exports.getCheckBalanceLowAddress = getCheckBalanceLowAddress;
//# sourceMappingURL=addresses.js.map